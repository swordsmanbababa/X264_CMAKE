#最低CMAKE版本
cmake_minimum_required(VERSION 3.20.2)

#设置代码编译类型
set(CMAKE_BUILD_TYPE DEBUG CACHE STRING
    "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel."
    FORCE)
set(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS}    -O2 -fp:fast -I. -I. -nologo -GS- -I./extras")
set(CMAKE_EXE_LINKER_FLAGS   "-nologo -incremental:no")
#设置项目名称
project (x264)

#选项
option(ENABLE_ASSEMBLY "Enable use of assembly coded primitives" OFF)
add_definitions(-DHIGH_BIT_DEPTH=0)
add_definitions(-DBIT_DEPTH=8)
add_definitions(-DHAVE_STRING_H)
# add_definitions(-DNDEBUG)
#构建
aux_source_directory(./common/ DIR_COMMON_SRCS)
aux_source_directory(./encoder/ DIR_ENCODER_SRCS)
aux_source_directory(./extras/ DIR_EXTRA_SRCS)


set(SRCS 
autocomplete.c    
input/input.c    
input/timecode.c    
input/raw.c    
input/y4m.c    
output/raw.c    
output/matroska.c    
output/matroska_ebml.c    
output/flv.c    
output/flv_bytestream.c    
filters/filters.c    
filters/video/video.c    
filters/video/source.c    
filters/video/internal.c    
filters/video/resize.c    
filters/video/fix_vfr_pts.c    
filters/video/select_every.c    
filters/video/crop.c    
input/avs.c    
extras/getopt.c    
filters/video/cache.c    
filters/video/depth.c    
input/thread.c    
common/osdep.c    
common/base.c    
common/cpu.c    
common/tables.c    
encoder/api.c    
common/win32thread.c    
common/mc.c    
common/predict.c    
common/pixel.c    
common/macroblock.c    
common/frame.c    
common/dct.c    
common/cabac.c    
common/common.c    
common/rectangle.c    
common/set.c    
common/quant.c    
common/deblock.c    
common/vlc.c    
common/mvpred.c    
common/bitstream.c    
encoder/analyse.c    
encoder/me.c    
encoder/ratecontrol.c    
encoder/set.c    
encoder/macroblock.c    
encoder/cabac.c    
encoder/cavlc.c    
encoder/encoder.c    
encoder/lookahead.c    
common/threadpool.c    
common/opencl.c    
encoder/slicetype-cl.c 
)



include_directories(./)
include_directories(./common/)
include_directories(./encoder)
include_directories(./extras/)

# # glib库需要分开
# set(GLIB2_INCLUDE_DIRS "./third-party/include/windows/glib-2.0" "./third-party/include/windows/glib-2.0/glib" "./third-party/include/windows/glib-2.0/glibconfig/x86_64")
# set(GENERAL_INCLUDE_DIRS "./third-party/include/windows")

# set(GIO2_LIBRARIES "gio-2.0")
# set(GLIB2_LIBRARIES "glib-2.0")
# set(GMODULE2_LIBRARIES "gmodule-2.0")
# set(GOBJECT2_LIBRARIES "gobject-2.0")
# set(GTHREAD2_LIBRARIES "gthread-2.0")

# set(GENERAL_LIB_DIRS "./third-party/lib/windows")


add_library("libx264"  ${SRCS})
add_executable("x264" ./x264.c)
target_include_directories("x264" PRIVATE
    "./"
    "./common/"
    "./encoder"
    "./extras/"
    "./input/"
    "./filters"
    "./filters/video"
    # ${GENERAL_INCLUDE_DIRS}
    # ${GLIB2_INCLUDE_DIRS}
)
target_link_libraries("x264" 
    libx264
    shell32
#     ${GIO2_LIBRARIES}
#     ${GLIB2_LIBRARIES}
#     ${GMODULE_LIBRARIES}
#     ${GOBJECT2_LIBRARIES}
#     ${GTHREAD2_LIBRARIES}
# )

# link_directories("x264"
#     ${GENERAL_LIB_DIRS}
)